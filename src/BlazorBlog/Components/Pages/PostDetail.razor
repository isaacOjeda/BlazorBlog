@page "/blog/{Slug}"
@using BlazorBlog.ApplicationCore.Features.Posts.Queries.GetPostDetails

@attribute [StreamRendering(true)]
@inject ISender Sender

<PageTitle>Detail</PageTitle>

<!-- Page Header-->
<header class="masthead" style="background-image: url('assets/img/post-bg.jpg')">
    <div class="container position-relative px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                <div class="post-heading">
                    <h1>@postDetails?.Title</h1>
                    <h2 class="subheading">@postDetails?.Subtitle</h2>
                    <span class="meta">
                        Posted by
                        <a href="#!">@postDetails?.Author</a>
                        on @postDetails?.Created.ToString("MMMM dd, yyyy")
                    </span>
                </div>
            </div>
        </div>
    </div>
</header>

<!-- Post Content -->
<article class="mb-4">
    <div class="container px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                @if(postDetails is null)
                {
                    <div class="d-flex justify-content-center my-5">
                        <div class="spinner-border text-default" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                }
                else
                {
                    <p>
                        @((MarkupString)postDetails.Content)
                    </p>
                }
            </div>
        </div>
    </div>
</article>

@code {
    [Parameter]
    public string Slug { get; set; } = string.Empty;

    private GetPostDetailsResponse? postDetails = null;


    protected override async Task OnInitializedAsync()
    {
        postDetails = await Sender.Send(new GetPostDetailsQuery(Slug));
    }
}