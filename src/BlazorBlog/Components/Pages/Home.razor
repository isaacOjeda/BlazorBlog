@page "/"
@using BlazorBlog.ApplicationCore.Features.Posts.Queries.GetPosts
@using MediatR
@attribute [StreamRendering(true)]
@inject ISender Sender

<PageTitle>Home</PageTitle>

<!-- Page Header-->
<header class="masthead" style="background-image: url('assets/img/home-bg.jpg')">
    <div class="container position-relative px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                <div class="site-heading">
                    <h1>Clean Blog</h1>
                    <span class="subheading">A Blog Theme by Start Bootstrap</span>
                </div>
            </div>
        </div>
    </div>
</header>

<!-- Main Content-->
<div class="container px-4 px-lg-5">
    <div class="row gx-4 gx-lg-5 justify-content-center">
        <div class="col-md-10 col-lg-8 col-xl-7">
            @if(viewModel is null)
            {
                <div class="d-flex justify-content-center my-5">
                    <div class="spinner-border text-default" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            }
            else if(viewModel.Posts.Count == 0)
            {
                <div class="alert alert-warning" role="alert">
                    No posts found.
                </div>
            }
            else if(viewModel.Posts.Count > 0)
            {
                @foreach (var post in viewModel.Posts)
                {
                    <div class="post-preview">
                        <NavLink href="/detail/123456">
                            <h2 class="post-title">@post.Title</h2>
                            @if(!string.IsNullOrEmpty(post.Subtitle))
                            {
                                <h3 class="post-subtitle">@post.Subtitle</h3>
                            }
                        </NavLink>

                        <p class="post-meta">
                            Posted by
                            <a href="#!">@post.Author</a>
                            on @post.Created.ToString("MMMM dd, yyyy")
                        </p>
                    </div>        
                }
                
            }
        </div>
    </div>
</div>

@code {

    [SupplyParameterFromQuery(Name = "page")]
    public int? currentPage { get; set; }
    public int pageSize { get; set; } = 5;

    GetPostsResponse? viewModel = null;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1000);

        viewModel = await Sender.Send(new GetPostsQuery
        {
            PageNumber = currentPage.GetValueOrDefault(1),
            PageSize = pageSize
        });
    }
}                    